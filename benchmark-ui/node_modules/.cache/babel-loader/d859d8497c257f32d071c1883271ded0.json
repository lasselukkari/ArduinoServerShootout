{"ast":null,"code":"var _jsxFileName = \"/Users/lasselukkari/Documents/Benchmark/benchmark-ui/src/App.js\";\nimport React from 'react';\nimport results from './results';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './App.css';\nconst tests = [{\n  connections: 1,\n  name: \"4B\"\n}, {\n  connections: 2,\n  name: \"4B\"\n}, {\n  connections: 8,\n  name: \"4B\"\n}, {\n  connections: 1,\n  name: \"4KB\"\n}, {\n  connections: 2,\n  name: \"4KB\"\n}, {\n  connections: 8,\n  name: \"4KB\"\n}, {\n  connections: 1,\n  name: \"400 * 100B\"\n}, {\n  connections: 2,\n  name: \"400 * 100B\"\n}, {\n  connections: 8,\n  name: \"400 * 100B\"\n}];\nconst servers = ['WebServer', 'AsyncWebServer', 'Awot'];\n\nfunction getChart(test, i) {\n  const data = servers.map(name => ({\n    name,\n    'Requests per sec': results[name][i].requestsPerSec\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, test.name, \" payload \", test.connections, \" connections\"), React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"Requests per sec\",\n    fill: \"#3186a0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n}\n\nfunction getCharts(tests) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, tests.map(getChart));\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Arduino HTTP Sever Shootout\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"An attempt to measure the write performance of three different Arduino web server frameworks.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Source code for the backends, test script and visualization are available at \", React.createElement(\"a\", {\n    href: \"https://github.com/lasselukkari/ArduinoServerShootout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"github.\"), \" \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Backends\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"WebServer\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/espressif/arduino-esp32\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Repository\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/lasselukkari/ArduinoServerShootout/blob/master/servers/WebServer/WebServer.ino\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Sketch\"))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"AsyncWebServer\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/me-no-dev/ESPAsyncWebServer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Repository\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/lasselukkari/ArduinoServerShootout/blob/master/servers/AsyncWebServer/AsyncWebServer.ino\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Sketch\"))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"aWOT\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/lasselukkari/aWOT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Repository\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/lasselukkari/ArduinoServerShootout/blob/master/servers/aWOT/aWOT.ino\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Sketch\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Disclaimer\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"This benchmark compares apples to oranges. AsyncWebServer processes requests in parallel.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Each benchmark was run once for 10 seconds.\"), getCharts(tests));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lasselukkari/Documents/Benchmark/benchmark-ui/src/App.js"],"names":["React","results","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","tests","connections","name","servers","getChart","test","i","data","map","requestsPerSec","getCharts","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport results from './results'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport './App.css'\n\nconst tests = [\n  {\n    connections: 1,\n    name: \"4B\",\n  },\n  {\n    connections: 2,\n    name: \"4B\",\n  },\n  {\n    connections: 8,\n    name: \"4B\",\n  },\n  {\n    connections: 1,\n    name: \"4KB\",\n  },\n  {\n    connections: 2,\n    name: \"4KB\",\n  },\n  {\n    connections: 8,\n    name: \"4KB\",\n  },\n  {\n    connections: 1,\n    name: \"400 * 100B\",\n  },\n  {\n    connections: 2,\n    name: \"400 * 100B\",\n  },\n  {\n    connections: 8,\n    name: \"400 * 100B\",\n  },\n]\n\nconst servers = ['WebServer', 'AsyncWebServer', 'Awot']\n\nfunction getChart(test, i) {\n  const data = servers.map((name) => ({ name, 'Requests per sec': results[name][i].requestsPerSec }));\n\n  return <div>\n    <h2>{test.name} payload {test.connections} connections</h2>\n    <BarChart\n      width={500}\n      height={300}\n      data={data}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"Requests per sec\" fill=\"#3186a0\" />\n\n    </BarChart>\n  </div>\n}\n\nfunction getCharts(tests) {\n  return <div>{tests.map(getChart)}</div>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Arduino HTTP Sever Shootout</h1>\n      <p>An attempt to measure the write performance of three different Arduino web server frameworks.</p>\n      <p>Source code for the backends, test script and visualization are available at <a href=\"https://github.com/lasselukkari/ArduinoServerShootout\">github.</a> </p>\n      <h2>Backends</h2>\n      <h3>WebServer</h3>\n      <ul>\n        <li>\n          <a href=\"https://github.com/espressif/arduino-esp32\">Repository</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/lasselukkari/ArduinoServerShootout/blob/master/servers/WebServer/WebServer.ino\">Sketch</a>\n        </li>\n      </ul>\n\n      <h3>AsyncWebServer</h3>\n      <ul>\n        <li>\n          <a href=\"https://github.com/me-no-dev/ESPAsyncWebServer\">Repository</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/lasselukkari/ArduinoServerShootout/blob/master/servers/AsyncWebServer/AsyncWebServer.ino\">Sketch</a>\n        </li>\n      </ul>\n      <h3>aWOT</h3>\n      <ul>\n        <li>\n          <a href=\"https://github.com/lasselukkari/aWOT\">Repository</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/lasselukkari/ArduinoServerShootout/blob/master/servers/aWOT/aWOT.ino\">Sketch</a>\n        </li>\n      </ul>\n      <h2>Disclaimer</h2>\n      <p>This benchmark compares apples to oranges. AsyncWebServer processes requests in parallel.</p>\n      <p>Each benchmark was run once for 10 seconds.</p>\n      {getCharts(tests)}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}